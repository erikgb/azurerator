---
apiVersion: v1
kind: Secret
type: kubernetes.io/Opaque
metadata:
  name: {{ include "azurerator.fullname" . }}-env
  annotations:
    reloader.stakater.com/match: "true"
  labels:
    {{ include "azurerator.labels" . | nindent 4 }}
stringData:
  azurerator.yaml: |
    azure:
      auth:
        client-id: "{{ .Values.azure.clientID }}"
        client-secret: "{{ .Values.azure.clientSecret }}"
        {{- if .Values.global.google.federatedAuth | default .Values.google.federatedAuth }}
        google:
          enabled: "{{ .Values.global.google.federatedAuth | default .Values.google.federatedAuth }}"
          project-id: "{{ .Values.global.google.projectID | default .Values.google.projectID }}"
        {{ end }}
      features:
        app-role-assignment-required:
          enabled: "{{ .Values.global.features.appRoleAssignmentRequired | default .Values.features.appRoleAssignmentRequired }}"
        claims-mapping-policies:
          enabled: "{{ .Values.global.features.claimsMappingPolicies.enabled | default .Values.features.claimsMappingPolicies }}"
          id: "{{ .Values.features.claimsMappingPolicies.id }}"
        cleanup-orphans:
          enabled: "{{ .Values.global.features.cleanupOrphans | default .Values.features.cleanupOrphans }}"
        groups-assignment:
          enabled: "{{ .Values.global.features.groupsAssignment.enabled | default .Values.features.groupsAssignment.enabled }}"
          {{- if .Values.features.groupsAssignment.allUsersGroupIDs }}
          all-users-group-id:
            {{- range $val := .Values.features.groupsAssignment.allUsersGroupIDs }}
            - "{{ $val }}"
            {{- end }}
          {{- end }}
      permissiongrant-resource-id: "{{ .Values.azure.permissionGrantResourceID }}"
      tenant:
        id: "{{ .Values.azure.tenant.id }}"
        name: "{{ .Values.azure.tenant.name }}"
    cluster-name: "{{ .Values.global.clusterName | default .Values.clusterName }}"
    controller:
      max-concurrent-reconciles: "{{ .Values.global.controller.maxConcurrentReconciles | default .Values.controller.maxConcurrentReconciles }}"
    kafka:
      enabled: "{{ .Values.global.kafka.application | default .Values.kafka.application }}"
      topic: "{{ .Release.Namespace }}.{{ include "azurerator.fullname" . }}"
      tls:
        enabled: "{{ .Values.global.kafka.tls | default .Values.kafka.tls }}"
    leader-election:
      enabled: "{{ .Values.global.controller.leaderElection | default .Values.controller.leaderElection }}"
    secret-rotation:
      cleanup: "{{ .Values.global.controller.secretRotation | default .Values.controller.secretRotation}}"
    validations:
      tenant:
        required: "{{ .Values.controller.tenantNameStrictMatching }}"
